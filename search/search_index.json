{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Helical AI Docs","text":"<p>Welcome. Use the navigation to explore.</p>"},{"location":"00-overview/","title":"Helical AI Overview","text":"<p>A complete, organized, and repeatable way to capture math, code, experiments, IP, and publication for the Helical and Architect blend.</p>"},{"location":"10-math/math-spec/","title":"Triangle-of-Means Recurrence (Math Spec)","text":""},{"location":"10-math/math-spec/#purpose","title":"Purpose","text":"<p>Define the mathematical core used for state updates.</p>"},{"location":"10-math/math-spec/#definitions","title":"Definitions","text":"<ul> <li>Projection: \\(X_t = W_x H_{t-1} + b_x\\)</li> <li>Reception: \\(Y_t = W_y I_t + b_y\\)</li> <li>Base (error): \\(b_t = (Y_t - X_t)/2\\)</li> <li>Neutral (geometric mean): \\(a_t = \\exp(0.5(\\ln(|X_t|+\\epsilon)+\\ln(|Y_t|+\\epsilon)))\\)</li> <li>Carrier (arithmetic mean): \\(c_t = (Y_t + X_t)/2\\)</li> </ul>"},{"location":"10-math/math-spec/#rotation-phase","title":"Rotation / Phase","text":"<ul> <li>Phase increment: \\(\\Delta \\phi_t \\in \\{5,7,11,13\\}\\times 2\\pi/24\\), or learned variant.</li> <li>Rotation operator: define block-rotations or unitary update here.</li> </ul>"},{"location":"10-math/math-spec/#update-rule","title":"Update Rule","text":"<p>State proposal: \\(z_t = f([b_t,a_t,c_t])\\). Final: \\(H_t = g( R_{\\Delta \\phi_t}(z_t), H_{t-1})\\).</p>"},{"location":"10-math/math-spec/#coherence-objective","title":"Coherence Objective","text":"<p>\\(\\mathcal{L}_{coh} = \\mathbb{E}[gate(b_t)\\cdot (1-\\cos(H_{t-1},H_t))]\\)</p>"},{"location":"10-math/phase-rotation/","title":"Phase and Rotation Schedule","text":"<ul> <li>Quasi-prime wheel: steps = [5,7,11,13] over 24.</li> <li>Learned offset: small MLP of \\(\\|b_t\\|, \\|a_t\\|, \\|c_t\\|\\).</li> <li>Alternatives: sinusoidal, Sobol or Halton discretizations.</li> <li>Justification: non-aliasing and long horizon recall.</li> </ul>"},{"location":"20-architecture/api-helicalcell/","title":"API: HelicalCell (PyTorch)","text":""},{"location":"20-architecture/api-helicalcell/#constructor","title":"Constructor","text":"<p><code>HelicalCell(dim, phase_mode=\"qprime|learned\", coherence_lambda=0.0, ...)</code></p>"},{"location":"20-architecture/api-helicalcell/#forwardh_t-1-i_t-h_t-aux","title":"forward(H_{t-1}, I_t) -&gt; H_t, aux","text":"<ul> <li>aux: {phi, dphi, stats}</li> </ul>"},{"location":"20-architecture/api-helicalcell/#training-hooks","title":"Training Hooks","text":"<ul> <li>coherence_loss(h_prev, h_curr, b_t)</li> </ul>"},{"location":"20-architecture/arch-spec/","title":"Helical Cell Architecture","text":"<p>A compact recurrent update that combines a triangle-of-means kernel with a phase rotation applied to channel pairs. This spec matches the training code in <code>helical_poc.py</code>.</p>"},{"location":"20-architecture/arch-spec/#1-interfaces","title":"1. Interfaces","text":"<p>Inputs - \\(H_{t-1}\\) \u2014 previous hidden state \\([B, D]\\) - \\(E_t\\) \u2014 embedded token at step \\(t\\) \\([B, D_{\\text{in}}]\\)</p> <p>Outputs - \\(H_t\\) \u2014 next hidden state \\([B, D]\\) - Classifier head: \\(\\text{logits}_t = W_o H_t\\)</p> <p>Constraint: <code>hidden_dim (D)</code> must be even (pairs for 2\u00d72 rotations).</p>"},{"location":"20-architecture/arch-spec/#2-notation","title":"2. Notation","text":"<ul> <li>Projection: \\(X_t = W_x H_{t-1}\\) </li> <li>Reception: \\(Y_t = W_y E_t\\)</li> </ul> <p>Triangle channels:</p> \\[ b_t = \\tfrac{1}{2}(Y_t - X_t) \\] \\[ a_t = \\exp\\!\\Big(\\tfrac{1}{2}\\big[\\ln(|X_t|+\\epsilon) + \\ln(|Y_t|+\\epsilon)\\big]\\Big) \\] \\[ c_t = \\tfrac{1}{2}(Y_t + X_t) \\] <p>Concatenate and fuse:</p> \\[ z_t = \\mathrm{GELU}\\!\\big(W_{\\text{mix}}[\\,b_t;\\,a_t;\\,c_t]\\big) \\]"},{"location":"20-architecture/arch-spec/#3-phase-rotation-on-pairs","title":"3. Phase rotation on pairs","text":"<p>For each adjacent channel pair \\((h_{2k}, h_{2k+1})\\), apply:</p> \\[ \\begin{bmatrix} h'_{2k} \\\\ h'_{2k+1} \\end{bmatrix} = \\begin{bmatrix} \\cos \\Delta\\phi_t &amp; -\\sin \\Delta\\phi_t \\\\ \\sin \\Delta\\phi_t &amp; \\cos \\Delta\\phi_t \\end{bmatrix} \\begin{bmatrix} h_{2k} \\\\ h_{2k+1} \\end{bmatrix} \\] <p>where \\(\\Delta\\phi_t \\in \\{5,7,11,13\\}\\cdot \\tfrac{2\\pi}{24}\\) (quasi-prime wheel).</p>"},{"location":"20-architecture/arch-spec/#4-state-update","title":"4. State update","text":"<p>Final update:</p> \\[ H_t = \\mathrm{GELU}\\!\\Big(\\mathrm{LayerNorm}(z_t + \\alpha \\cdot H^{\\mathrm{rot}}_{t-1})\\Big), \\quad \\alpha \\approx 0.1 \\] <p>Classifier:</p> \\[ \\text{logits}_t = W_o H_t \\]"},{"location":"20-architecture/arch-spec/#5-optional-coherence-regularizer","title":"5. Optional Coherence Regularizer","text":"<p>Encourages directional similarity between successive hidden states:</p> \\[ \\mathcal{L}_\\text{coh} = \\lambda \\cdot \\big(1 - \\cos \\angle(H_{t-1}, H_t)\\big) \\] <p>Enabled by default, disabled with <code>--no_coh</code>.</p>"},{"location":"20-architecture/arch-spec/#6-pseudocode","title":"6. Pseudocode","text":"<p>```python</p>"},{"location":"20-architecture/arch-spec/#shapes-h_prev-b-d-e_t-b-d_in-d-even","title":"Shapes: H_prev [B, D], E_t [B, D_in]; D even","text":"<p>X = W_x(H_prev) Y = W_y(E_t)</p> <p>b = 0.5 * (Y - X) a = torch.exp(0.5 * (torch.log(torch.abs(X)+eps) + torch.log(torch.abs(Y)+eps))) c = 0.5 * (Y + X)</p> <p>z = GELU(W_mix(torch.cat([b, a, c], dim=-1)))</p> <p>dphi = wheel[t % len(wheel)] * (2*math.pi/24) Hrot = rotate_pairs(H_prev, dphi)</p> <p>H_t = GELU(LayerNorm(z + 0.1 * Hrot))</p> <p>graph TD;   A[Input token] --&gt;|Embed| B[Embedding E_t]   B --&gt; C[Linear W_y]   Hprev[H_prev] --&gt; D[Linear W_x]   D --&gt; E[Triangle channels b,a,c]   C --&gt; E   E --&gt; F[W_mix + GELU]   Hprev --&gt; G[Rotate pairs R delta_phi_t]   F --&gt; H[LayerNorm + GELU + alpha\u00b7H_rot]   G --&gt; H   H --&gt; I[Linear head W_o]   I --&gt; J[logits]   Hprev -- optional --&gt; K((coherence loss))   H -- compare --&gt; K</p> <p>helical_cell:   dim: 128   phase_wheel: [5, 7, 11, 13]   # \u00d7 (2\u03c0/24)   residual_alpha: 0.1   norm: layernorm   activation: gelu   coherence_lambda: 0.05        # set 0 or use --no_coh   eps: 1e-6</p>"},{"location":"30-implementation/bench-setup/","title":"Bench Setup","text":"<ul> <li>Tasks: copy, reverse, parity. Needle in a haystack. MIDI continuation. Tiny LM.</li> <li>Metrics: horizon length, phase slip rate, perplexity or accuracy.</li> <li>Ablations: \u0394\u03c6 schedule. \u03bb schedule. Rotation type. Head mixing.</li> </ul>"},{"location":"30-implementation/engineering-notes/","title":"Engineering Notes","text":"<ul> <li>Vectorization for rotations</li> <li>Log-domain geometric mean for stability</li> <li>Mixed precision notes</li> <li>torch.compile notes</li> </ul>"},{"location":"40-experiments/","title":"Experiment Logs","text":"<p>Add entries like <code>experiment-YYYYMMDD-&lt;slug&gt;.md</code> for every run. - 2025-08-24 \u2014 toy next-step prediction - 2025-08-24 \u2014 copy lag T=64 - 2025-08-24 \u2014 reverse T=48</p>"},{"location":"40-experiments/ablation-plan/","title":"Ablation Plan","text":"<ul> <li>\u0394\u03c6: qprime vs sinusoid vs learned</li> <li>Rotation: block Givens vs Cayley vs unitary</li> <li>Fusion: AM or GM vs power mean</li> <li>Coherence: \u03bb in {0, .01, .05}</li> <li>Attention: off vs phase gated vs hybrid head</li> </ul>"},{"location":"40-experiments/experiment-2025-08-24-baseline/","title":"Experiment 2025-08-24 \u2014 baseline","text":""},{"location":"40-experiments/experiment-2025-08-24-baseline/#goal","title":"Goal","text":"<p>Smoke test docs and repo, confirm site builds.</p>"},{"location":"40-experiments/experiment-2025-08-24-baseline/#config","title":"Config","text":"<p>n/a</p>"},{"location":"40-experiments/experiment-2025-08-24-baseline/#results","title":"Results","text":"<p>Site builds locally and deploys to gh-pages.</p>"},{"location":"40-experiments/experiment-2025-08-24-baseline/#observations","title":"Observations","text":"<p>Nav works. LaTeX renders.</p>"},{"location":"40-experiments/experiment-2025-08-24-baseline/#next","title":"Next","text":"<p>Add helical cell and run first synthetic task.</p>"},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/","title":"Experiment 2025-08-24 \u2014 copy-lag-T64","text":""},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#commit","title":"Commit","text":"<p>30a1468</p>"},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#goal","title":"Goal","text":""},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#config","title":"Config","text":""},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#results","title":"Results","text":""},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#observations","title":"Observations","text":""},{"location":"40-experiments/experiment-2025-08-24-copy-lag-T64/#next","title":"Next","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/","title":"Experiment 2025-08-24 \u2014 reverse-T48","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#commit","title":"Commit","text":"<p>30a1468</p>"},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#goal","title":"Goal","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#config","title":"Config","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#results","title":"Results","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#observations","title":"Observations","text":""},{"location":"40-experiments/experiment-2025-08-24-reverse-T48/#next","title":"Next","text":""},{"location":"40-experiments/experiment-2025-08-24-toy/","title":"Experiment YYYY-MM-DD \u2014 toy next-step prediction","text":""},{"location":"40-experiments/experiment-2025-08-24-toy/#goal","title":"Goal","text":"<p>Sanity-check HelicalCell v1 on a periodic signal.</p>"},{"location":"40-experiments/experiment-2025-08-24-toy/#config","title":"Config","text":"<ul> <li>dim=32, epochs=3, Adam lr=3e-3</li> </ul>"},{"location":"40-experiments/experiment-2025-08-24-toy/#results","title":"Results","text":"<ul> <li>Loss decreased across epochs on periodic synthetic data.</li> </ul>"},{"location":"40-experiments/experiment-2025-08-24-toy/#observations","title":"Observations","text":"<ul> <li>Training runs without errors; helical rotation + triangle-fusion is numerically stable at this scale.</li> </ul>"},{"location":"40-experiments/experiment-2025-08-24-toy/#next","title":"Next","text":"<ul> <li>Add copy/reverse/parity benchmarks.</li> <li>Try learned-phase \u0394\u03c6 and compare vs fixed.</li> </ul>"},{"location":"50-datasets/","title":"Dataset Cards","text":"<p>Document sources, licenses, splits, preprocessing, risks.</p>"},{"location":"60-results/figures/","title":"Figures","text":"<p>Place plots and figures under <code>docs/60-results/</code> and link them here.</p>"},{"location":"60-results/results/","title":"Results","text":"Task Baseline Helical v1 Helical v2 Copy-L=200 MIDI-long"},{"location":"70-compliance/risk-safety/","title":"Risk and Safety","text":"<ul> <li>Misuse scenarios</li> <li>Model limitations</li> <li>Evaluation methods for safety</li> <li>Red team notes</li> </ul>"},{"location":"80-ip/defensive-publication/","title":"Defensive Publication Outline","text":"<ul> <li>Abstract</li> <li>Method (equations and algorithms)</li> <li>Experimental evidence</li> <li>Limitations and future work</li> </ul>"},{"location":"80-ip/ip-log/","title":"IP Log","text":"<ul> <li>YYYY-MM-DD \u2014 Title \u2014 Inventor(s)</li> <li>Summary</li> <li>Novelty vs prior art</li> <li>Public disclosures (links or audiences)</li> <li>Decision: trade secret or provisional patent or defensive publication</li> </ul>"},{"location":"80-ip/patent-prep/","title":"Patent Preparation Notes","text":"<ul> <li>Claims sketch</li> <li>Flowcharts</li> <li>Enablement checklist</li> <li>Prior art list</li> </ul>"},{"location":"90-ops/how-we-work/","title":"How We Work","text":"<ul> <li>Branching and PRs</li> <li>Code review checklist</li> <li>Documentation Definition of Done</li> <li>Release cadence</li> </ul>"},{"location":"90-ops/milestones/","title":"Milestones &amp; History","text":"<p>This page lists releases and links to the exact code and docs for each milestone.</p>"},{"location":"90-ops/milestones/#v010-initial-scaffold-helicalcell-v1","title":"v0.1.0 \u2014 Initial scaffold + HelicalCell v1","text":"<ul> <li>Tag: v0.1.0</li> <li>Commit: (fill after tagging)</li> <li>Docs (this version): (optional if you later add versioned docs)</li> </ul>"},{"location":"90-ops/milestones/#upcoming","title":"Upcoming","text":"<ul> <li>v0.2.0 \u2014 Learned-phase \u0394\u03c6, copy/reverse benchmarks</li> </ul>"}]}